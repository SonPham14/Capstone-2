import pandas as pd
import joblib
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, accuracy_score, confusion_matrix
from sklearn.feature_extraction.text import TfidfVectorizer

# B∆∞·ªõc 1: ƒê·ªçc d·ªØ li·ªáu t·ª´ file
df = pd.read_csv("dataset.csv")

# B∆∞·ªõc 2: G·ªôp d·ªØ li·ªáu ƒë·∫ßu v√†o
df = df.fillna('')  # x·ª≠ l√Ω gi√° tr·ªã NaN
X_text = df[['full_log', 'data_url']].astype(str).agg(' '.join, axis=1)  # n·ªëi hai c·ªôt th√†nh chu·ªói

# B∆∞·ªõc 3: Vector h√≥a d·ªØ li·ªáu text
vectorizer = TfidfVectorizer()
X_vec = vectorizer.fit_transform(X_text)

# ch·ªó n√†y t vi·∫øt l√† c·ª© c√≥ ch√®n payload th√¨ label 1, ng∆∞·ª£c l·∫°i label 0
y = df["label"]

# B∆∞·ªõc 5: Chia d·ªØ li·ªáu train/test
X_train, X_test, y_train, y_test = train_test_split(X_vec, y, test_size=0.3, random_state=42)

# B∆∞·ªõc 6: Hu·∫•n luy·ªán m√¥ h√¨nh
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# B∆∞·ªõc 7: ƒê√°nh gi√° m√¥ h√¨nh
y_pred = model.predict(X_test)
print("üéØ Accuracy:", accuracy_score(y_test, y_pred))
print("üìã Classification Report:\n", classification_report(y_test, y_pred))
print("üìä Confusion Matrix:\n", confusion_matrix(y_test, y_pred))

# B∆∞·ªõc 8: L∆∞u m√¥ h√¨nh v√† vectorizer
joblib.dump(model, "wazuh_classifier.joblib")
joblib.dump(vectorizer, "tfidf_vectorizer.joblib")
print("‚úÖ ƒê√£ l∆∞u m√¥ h√¨nh v√† vectorizer!")